{"componentChunkName":"component---src-templates-blog-post-js","path":"/asp.dotnet-react-typescript/","result":{"data":{"site":{"siteMetadata":{"title":"Canhua's Blog"}},"markdownRemark":{"id":"e07cf1de-4488-5435-82d2-0eef19ec5b79","excerpt":"ASP.NET Core doesn't provide the template to create a React project with Typescript support. There are multiple ways to add Typescript to Asp.net project. Forâ€¦","html":"<p>ASP.NET Core doesn't provide the template to create a React project with Typescript support. There are multiple ways to add Typescript to Asp.net project. For example, <a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-aspnet-with-typescript?view=vs-2022\">Tutorial: Create an ASP.NET Core app with TypeScript in Visual Studio</a>\r\nIf you are going to create a new React project, the easy way to use <code>create-react-app</code></p>\n<p>Source code: <a href=\"https://github.com/licanhua/asp.net-core-react-typescript/tree/main\">https://github.com/licanhua/asp.net-core-react-typescript/tree/main</a></p>\n<h2>Step 1 Create an ASP.NET core app with React</h2>\n<p><a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-asp-net-core-with-react?view=vs-2022\">Create an ASP.NET Core app with React in Visual Studio</a></p>\n<h2>Step 2 Rename ClientApp to ClientApp2</h2>\n<pre><code class=\"language-cmd\">move ClientApp ClientApp2\n</code></pre>\n<h2>Step 3 Start a new Create React App project with TypeScript</h2>\n<pre><code>npx create-react-app ClientApp --template typescript\n</code></pre>\n<h2>Step 4 Copy below files from ClientApp2 to Client</h2>\n<pre><code>aspnetcore-https.js\r\naspnetcore-react.js\r\n.env\r\n.env.development\n</code></pre>\n<h2>Step 5 Add prestart to package.json</h2>\n<pre><code class=\"language-json\">  \"scripts\": {\r\n    \"prestart\": \"node aspnetcore-https &#x26;&#x26; node aspnetcore-react\",\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\n</code></pre>\n<h2>Step 7, Copy setupProxy.js from ClientApp2\\src to ClientApp\\src</h2>\n<h2>Step 8, Add http-proxy-middleware to package.json</h2>\n<pre><code class=\"language-json\">  \"dependencies\": {\r\n    ...,\r\n    \"http-proxy-middleware\": \"^2.0.6\"\r\n  },\n</code></pre>\n<h2>Step 9, run <code>npm i</code></h2>\n<h2>Step 10, Run the ASP.NET project from Visual Studio.</h2>\n<p>Expecting the new React project is launched with <a href=\"https://localhost:44473/\">https://localhost:44473/</a>, and the API endpoint is <a href=\"https://localhost:44473/weatherforecast\">https://localhost:44473/weatherforecast</a></p>","frontmatter":{"title":"Create an ASP.NET Core app with React + Typescript in Visual Studio","date":"September 12, 2022","description":"Create an ASP.NET Core app with React + Typescript"}},"previous":{"fields":{"slug":"/system-design/"},"frontmatter":{"title":"System Design Interview"}},"next":{"fields":{"slug":"/test-trusted-types/"},"frontmatter":{"title":"How to test trusted types"}}},"pageContext":{"id":"e07cf1de-4488-5435-82d2-0eef19ec5b79","previousPostId":"13dd8d3c-4907-5289-83f0-c7471bf95cb9","nextPostId":"7ce3f48f-5ec5-560f-b580-5a36eca9d95f"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}