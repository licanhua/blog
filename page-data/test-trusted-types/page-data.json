{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/test-trusted-types/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Canhua's Blog"}},"markdownRemark":{"id":"684d1f7e-cccd-5730-aff7-3293597a6278","excerpt":"Background JavaScript SDK should fully support Trusted Types API so that it can be seamlessly integrated in applications that enforce Trusted Types for all DOMâ€¦","html":"<h2>Background</h2>\n<p>JavaScript SDK should fully support <a href=\"https://w3c.github.io/webappsec-trusted-types/dist/spec/\">Trusted Types API</a> so that it can be seamlessly integrated in applications that enforce Trusted Types for all DOM XSS Injection Sinks (such as innerHTML setters) via CSP directive require-trusted-types-for.</p>\n<p>To meet the requirement, you need make the html trusted before arbitrary HTML assignments into .innerHTML</p>\n<p>code examples</p>\n<pre><code class=\"language-js\">const ttPolicy = window.trustedTypes?.createPolicy('adaptivecards-ui-testapp', {\r\n    createHTML: value => value,\r\n});\r\n\r\nconst trustedHtml = ttPolicy?.createHTML(inputsAsJson) ?? inputsAsJson;\r\nretrievedInputsDiv.innerHTML = trustedHtml as string;\n</code></pre>\n<p>TT docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API\">https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API</a>\r\nA Guide to TT: <a href=\"https://web.dev/trusted-types/\">https://web.dev/trusted-types/</a>\r\nTT w3c spec: <a href=\"https://w3c.github.io/webappsec-trusted-types/dist/spec/\">https://w3c.github.io/webappsec-trusted-types/dist/spec/</a></p>\n<p><a href=\"https://web.dev/trusted-types/#identify-trusted-types-violations\">identify-trusted-types-violations</a></p>\n<h2>How to test your change</h2>\n<p>Trusted Types are only available in a secure context like HTTPS and localhost. Make sure you are using https first.</p>\n<ul>\n<li>use Content-Security-Policy-Report-Only</li>\n</ul>\n<p>If you are able to modify the html response header, you may use Content-Security-Policy-Report-Only</p>\n<pre><code>Content-Security-Policy-Report-Only: require-trusted-types-for 'script'; report-uri //my-csp-endpoint.example\n</code></pre>\n<ul>\n<li>use Content-Security-Policy + meta header</li>\n</ul>\n<p>If your content is served as static context(for example, a SPA app), you may add Content-Security-Policy to your html or modify the html directly from developer's tool the browser provided.</p>\n<pre><code class=\"language-html\">&#x3C;meta http-equiv=\"Content-Security-Policy\" content=\"require-trusted-types-for 'script';\" />\n</code></pre>","frontmatter":{"title":"How to test trusted types","date":"September 13, 2022","description":"How to test trusted types"}},"previous":{"fields":{"slug":"/asp.dotnet-react-typescript/"},"frontmatter":{"title":"Create an ASP.NET Core app with React + Typescript in Visual Studio"}},"next":null},"pageContext":{"id":"684d1f7e-cccd-5730-aff7-3293597a6278","previousPostId":"8bb22699-06a1-5832-be05-8e67fe1a3d51","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868"]}