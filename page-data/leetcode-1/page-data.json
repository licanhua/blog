{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/leetcode-1/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Canhua's Blog"}},"markdownRemark":{"id":"50378cdc-83c9-5f0c-85ed-ed8ed033ecc2","excerpt":"160. Intersection of Two Linked Lists 189. Rotate Array It's the best example to use splice 148. Sort list fast and slow pointers let or var in function","html":"<p><a href=\"https://leetcode.com/problems/intersection-of-two-linked-lists/\">160. Intersection of Two Linked Lists</a></p>\n<pre><code class=\"language-js\"> // Assume list A and list B, the intersection of A and B \r\n // should be the same as intersection of AB and BA\r\n // ...A ...B\r\n // ...B ...A\r\n var getIntersectionNode = function(headA, headB) {\r\n  let cur1 = headA;\r\n  let cur2 = headB;\r\n  while (cur1 != cur2) {\r\n      cur1 = cur1 ? cur1.next : headB;\r\n      cur2 = cur2 ? cur2.next : headA;\r\n  }\r\n  return cur1;\r\n};\n</code></pre>\n<p><a href=\"https://leetcode.com/problems/rotate-array/\">189. Rotate Array</a></p>\n<p>It's the best example to use splice</p>\n<pre><code class=\"language-js\">/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {void} Do not return anything, modify nums in-place instead.\r\n */\r\nvar rotate = function (nums, k) {\r\n    k %= nums.length;\r\n    nums.splice(0, 0, ...nums.splice(-k, k))\r\n};\n</code></pre>\n<p><a href=\"https://leetcode.com/problems/sort-list/\">148. Sort list</a></p>\n<ul>\n<li>fast and slow pointers</li>\n<li>let or var in function</li>\n</ul>\n<pre><code class=\"language-js\">function sortList(head) {\r\n    if (head == null || head.next == null) return head;\r\n    let slow = head, fast = head.next;\r\n    while (fast != null &#x26;&#x26; fast.next != null) {\r\n        slow = slow.next;\r\n        fast = fast.next.next;\r\n    }\r\n\r\n    let mid = slow.next;\r\n    slow.next = null;\r\n    let l1 = sortList(head);\r\n    let l2 = sortList(mid);\r\n    let dummy = new ListNode();\r\n    let cur = dummy;\r\n    while (l1 != null &#x26;&#x26; l2 != null) {\r\n        if (l1.val &#x3C;= l2.val) {\r\n            cur.next = l1;\r\n            l1 = l1.next;\r\n        } else {\r\n            cur.next = l2;\r\n            l2 = l2.next;\r\n        }\r\n        cur = cur.next;\r\n    }\r\n    cur.next = l1 == null ? l2 : l1;\r\n    return dummy.next;\r\n};\n</code></pre>","frontmatter":{"title":"LeetCode 1","date":"December 11, 2021","description":"Leetcode good example"}},"previous":{"fields":{"slug":"/js-data-structure/"},"frontmatter":{"title":"JavaScript Data Structures and Algorithm Snapshot"}},"next":{"fields":{"slug":"/js-tips/"},"frontmatter":{"title":"JavaScript tips"}}},"pageContext":{"id":"50378cdc-83c9-5f0c-85ed-ed8ed033ecc2","previousPostId":"68e788eb-6a4a-550d-ba04-c075c14a0b38","nextPostId":"7c2d5d7d-5b08-51fb-92bf-5df7f56156af"}},
    "staticQueryHashes": ["2841359383","3257411868"]}