{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/js-mistakes/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Canhua's Blog"}},"markdownRemark":{"id":"30103159-b9a3-5f6d-8b19-6c332092901f","excerpt":"Accidentally Using the Assignment Operator This if statement returns true (maybe not as expected), because 10 is true: Expecting Loose Comparison In regularâ€¦","html":"<h2>Accidentally Using the Assignment Operator</h2>\n<ul>\n<li>This if statement returns true (maybe not as expected), because 10 is true:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Expecting Loose Comparison</h2>\n<p>In regular comparison, data type does not matter. This if statement returns true:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> y<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>In strict comparison, data type does matter. This if statement returns false:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> y<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre></div>\n<h2>switch statements use strict comparison</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">case</span> <span class=\"token string\">\"10\"</span><span class=\"token operator\">:</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// no alert. should use case 10:</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Confusing Addition &#x26; Concatenation</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\nx <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Now x is 15</span>\r\n\r\n<span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\ny <span class=\"token operator\">+=</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// Now y is \"105\"</span></code></pre></div>\n<h2>Misunderstanding Floats</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> z <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y            <span class=\"token comment\">// the result in z will not be 0.3. but 0.30000000000000004</span>\r\n\r\n<span class=\"token keyword\">let</span> z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// z will be 0.3</span></code></pre></div>\n<h2>Undefined is Not Null</h2>\n<p>You can test if an object exists by testing if the type is undefined</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> myObj <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<p>but it will throw exception if</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myObj <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> \r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myObj <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<p>How to test a obj is not empty</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> myObj <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">&amp;&amp;</span> myObj <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<h2>type coercion</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// x === 123</span>\r\n</code></pre></div>\n<h2>Incorrect references to this</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token class-name\">Game</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">restart</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  \r\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// save reference to 'this', while it's still this!</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// this doesn't work here.</span>\r\n    self<span class=\"token punctuation\">.</span><span class=\"token function\">clearBoard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// oh OK, I do know who 'self' is!</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>NaN</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span> <span class=\"token operator\">==</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// false</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// false</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// true</span></code></pre></div>\n<h2>Incorrect use of function definitions inside for loops</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> elements<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// assume we have 10 elements for this example</span>\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    elements<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is element #\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Actual Result: This is element #10</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fix it with a function</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">makeHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// outer function</span>\r\n     <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">// inner function</span>\r\n         console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is element #\"</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    elements<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token function\">makeHandler</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<h2>Reference</h2>\n<p><a href=\"https://www.w3schools.com/js/js_mistakes.asp\">https://www.w3schools.com/js/js_mistakes.asp</a></p>","frontmatter":{"title":"JavaScript Common Mistakes","date":"December 20, 2021","description":"JavaScript Common Mistakes"}},"previous":{"fields":{"slug":"/js-for-loop/"},"frontmatter":{"title":"JavaScript For..In/For..Of/ForEach Loops"}},"next":null},"pageContext":{"id":"30103159-b9a3-5f6d-8b19-6c332092901f","previousPostId":"9ceed85f-d2ea-57a2-80eb-badc1c55d9d5","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868"]}