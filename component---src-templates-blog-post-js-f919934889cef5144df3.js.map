{"version":3,"file":"component---src-templates-blog-post-js-f919934889cef5144df3.js","mappings":"qJAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,yC,sDCVV,IAlCe,SAAC,GAAmC,IAG7CC,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,sBAAIjB,UAAU,gBACZ,gBAAC,EAAAmB,KAAD,CAAMC,GAAG,KAAKL,IAKhB,gBAAC,EAAAI,KAAD,CAAMnB,UAAU,mBAAmBoB,GAAG,KACnCL,GAML,gBAAC,IAAD,CAAKM,UAAWN,GACd,uBAAKf,UAAU,iBAAiB,oBAAmBiB,GACjD,0BAAQjB,UAAU,iBAAiBa,GACnC,4BAAOG,GACP,oCACK,IAAIM,MAAOC,cADhB,mBAGE,qBAAGZ,KAAK,4BAAR,e,4EC3BCa,EAAc,mCACdC,EAAc,mCC+BzB,EAzBY,SAAC,GAA6B,IAA3BJ,EAA0B,EAA1BA,UAAWL,EAAe,EAAfA,SACxB,OACE,uBAAKhB,UDZc,gCCajB,6BAAQqB,GACR,uBAAKrB,UDTe,oCCUlB,sBAAIA,UDbU,gCCcZ,sBAAIA,UAAWwB,GACb,gBAAC,EAAAL,KAAD,CAAMC,GAAG,IAAIpB,UAAWyB,GAAxB,UAIF,sBAAIzB,UAAWwB,GACb,gBAAC,EAAAL,KAAD,CAAMC,GAAG,WAAWpB,UAAWyB,GAA/B,cAMN,4BACGT,M,uDClBHU,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMd,EAAY,EAAZA,MAC9BlB,GAASF,EAAAA,EAAAA,gBAAe,cAAxBE,KAgBFiC,EAAkBH,GAAe9B,EAAKC,aAAa6B,YACnDI,EAAY,UAAGlC,EAAKC,oBAAR,aAAG,EAAmBiB,MAExC,OACE,gBAAC,IAAD,CACEiB,eAAgB,CACdJ,KAAAA,GAEFb,MAAOA,EACPkB,cAAeF,EAAY,QAAWA,EAAiB,KACvDF,KAAM,CACJ,CACEpB,KAAK,cACLyB,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACEzB,KAAK,eACLyB,QAAQ,WAEV,CACEzB,KAAK,kBACLyB,SAAS,UAAArC,EAAKC,oBAAL,mBAAmBC,cAAnB,eAA2Ba,UAA3B,IAEX,CACEH,KAAK,gBACLyB,QAASnB,GAEX,CACEN,KAAK,sBACLyB,QAASJ,IAEXM,OAAOP,MAKfH,EAAIW,aAAe,CACjBT,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,kFCxBA,UA3DyB,SAAC,GAAwB,IAAD,EAArBjC,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SAC1BwB,EAAO5C,EAAK6C,eACZC,GAAY,UAAA9C,EAAKG,KAAKC,oBAAV,eAAwBiB,QAAxB,QACV0B,EAAmB/C,EAAnB+C,SAAUC,EAAShD,EAATgD,KAElB,OACE,gBAAC,IAAD,CAAQ5B,SAAUA,EAAUC,MAAOyB,GACjC,gBAAC,IAAD,CACEzB,MAAOuB,EAAKK,YAAY5B,MACxBY,YAAaW,EAAKK,YAAYhB,aAAeW,EAAKM,UAEpD,2BACE5C,UAAU,YACV6C,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYT,EAAKK,YAAY5B,OAC1C,yBAAIuB,EAAKK,YAAYK,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQZ,EAAKa,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK/C,UAAU,iBACb,sBACEoD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhB,GACC,gBAAC,EAAAtB,KAAD,CAAMC,GAAIqB,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACKnB,EAASE,YAAY5B,QAI9B,0BACG2B,GACC,gBAAC,EAAAvB,KAAD,CAAMC,GAAIsB,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKC,YAAY5B,MADpB,Y","sources":["webpack://licanhua-blog/./src/components/bio.js","webpack://licanhua-blog/./src/components/layout.js","webpack://licanhua-blog/./src/components/nav.module.css","webpack://licanhua-blog/./src/components/nav.js","webpack://licanhua-blog/./src/components/seo.js","webpack://licanhua-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Nav from './nav'\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Nav pageTitle={title}>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <header className=\"global-header\">{header}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"nav-module--container--HWULm\";\nexport var heading = \"nav-module--heading--Wz2N3\";\nexport var navLinks = \"nav-module--nav-links--qPG9H\";\nexport var navLinkItem = \"nav-module--nav-link-item--fh-3m\";\nexport var navLinkText = \"nav-module--nav-link-text--poFuw\";\nexport var navContainer = \"nav-module--nav-container--vLT2H\";","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  navContainer\r\n} from './nav.module.css'\r\n\r\nconst Nav = ({ pageTitle, children }) => {\r\n  return (\r\n    <div className={container}>\r\n      <title>{pageTitle}</title>\r\n      <nav className={navContainer}>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/\" className={navLinkText}>\r\n              Blogs\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/profile\" className={navLinkText}>\r\n              Profile\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                â {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} â\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","header","location","title","children","isRootPath","pathname","Link","to","pageTitle","Date","getFullYear","navLinkItem","navLinkText","Seo","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","content","property","concat","defaultProps","post","markdownRemark","siteTitle","previous","next","frontmatter","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}