{"version":3,"file":"component---src-pages-404-js-edb18f9f84121a345200.js","mappings":"oJAsCA,IAlCe,SAAC,GAAmC,IAG7CA,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,gBAAC,IAAD,CAAKO,UAAWP,GACd,uBAAKI,UAAU,iBAAiB,oBAAmBF,GACjD,0BAAQE,UAAU,iBAAiBN,GACnC,4BAAOG,GACP,oCACK,IAAIO,MAAOC,cADhB,mBAGE,qBAAGC,KAAK,4BAAR,e,4EC3BCC,EAAc,mCACdC,EAAc,mCC+BzB,EAzBY,SAAC,GAA6B,IAA3BL,EAA0B,EAA1BA,UAAWN,EAAe,EAAfA,SACxB,OACE,uBAAKG,UDZc,gCCajB,6BAAQG,GACR,uBAAKH,UDTe,oCCUlB,sBAAIA,UDbU,gCCcZ,sBAAIA,UAAWO,GACb,gBAAC,EAAAN,KAAD,CAAMC,GAAG,IAAIF,UAAWQ,GAAxB,UAIF,sBAAIR,UAAWO,GACb,gBAAC,EAAAN,KAAD,CAAMC,GAAG,WAAWF,UAAWQ,GAA/B,cAMN,4BACGX,M,uDClBHY,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMhB,EAAY,EAAZA,MAC9BiB,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBpB,MAExC,OACE,gBAAC,IAAD,CACEsB,eAAgB,CACdP,KAAAA,GAEFf,MAAOA,EACPuB,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASzB,GAEX,CACE0B,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,mBAAmBO,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAK,gBACLC,QAASzB,GAEX,CACEwB,KAAK,sBACLC,QAASN,IAEXU,OAAOb,MAKfH,EAAIiB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,8DCxEA,UAZqB,SAAC,GAAwB,IAAtBiB,EAAqB,EAArBA,KAAMhC,EAAe,EAAfA,SACtBiC,EAAYD,EAAKd,KAAKG,aAAapB,MAEzC,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOgC,GACjC,gBAAC,IAAD,CAAKhC,MAAM,mBACX,4CACA","sources":["webpack://licanhua-blog/./src/components/layout.js","webpack://licanhua-blog/./src/components/nav.module.css","webpack://licanhua-blog/./src/components/nav.js","webpack://licanhua-blog/./src/components/seo.js","webpack://licanhua-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Nav from './nav'\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Nav pageTitle={title}>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <header className=\"global-header\">{header}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"nav-module--container--HWULm\";\nexport var heading = \"nav-module--heading--Wz2N3\";\nexport var navLinks = \"nav-module--nav-links--qPG9H\";\nexport var navLinkItem = \"nav-module--nav-link-item--fh-3m\";\nexport var navLinkText = \"nav-module--nav-link-text--poFuw\";\nexport var navContainer = \"nav-module--nav-container--vLT2H\";","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  navContainer\r\n} from './nav.module.css'\r\n\r\nconst Nav = ({ pageTitle, children }) => {\r\n  return (\r\n    <div className={container}>\r\n      <title>{pageTitle}</title>\r\n      <nav className={navContainer}>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/\" className={navLinkText}>\r\n              Blogs\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/profile\" className={navLinkText}>\r\n              Profile\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"404: Not Found\" />\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","pageTitle","Date","getFullYear","href","navLinkItem","navLinkText","Seo","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","data","siteTitle"],"sourceRoot":""}